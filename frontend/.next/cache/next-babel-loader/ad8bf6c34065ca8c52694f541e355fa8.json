{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/martimad/Projects/capstone/FarmersSpecial/frontend/src/components/CreateProduct.js\";\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Form from './styles/FormStyles';\nimport * as actions from '../actions/product';\n\nconst CreateProduct = props => {\n  useEffect(() => {\n    props.fetchAllProducts();\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"file\",\n          children: [\"Image\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            id: \"file\",\n            name: \"image\",\n            placeholder: \"Upload an image\",\n            required: true // onChange={handleChange}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"name\",\n            name: \"name\",\n            placeholder: \"Name\",\n            required: true // value={inputs.name}\n            // onChange={handleChange}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"price\",\n          children: [\"Price\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"price\",\n            name: \"price\",\n            placeholder: \"Price\",\n            required: true // value={inputs.price}\n            // onChange={handleChange}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          children: [\"Description\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"description\",\n            name: \"description\",\n            placeholder: \"Description\",\n            required: true // value={inputs.description}\n            // onChange={handleChange}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: props.productList.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 24\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\nconst mapStateToProps = state => ({\n  productList: state.product.list\n});\n\nconst mapActionsToProps = {\n  fetchAllProducts: actions.fetchAll\n};\nexport default connect(mapStateToProps, mapActionsToProps)(CreateProduct);","map":{"version":3,"sources":["/Users/martimad/Projects/capstone/FarmersSpecial/frontend/src/components/CreateProduct.js"],"names":["React","useState","useEffect","connect","Form","actions","CreateProduct","props","fetchAllProducts","productList","map","item","index","title","mapStateToProps","state","product","list","mapActionsToProps","fetchAll"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,OAAO,KAAKC,OAAZ,MAAyB,oBAAzB;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAE7BL,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,KAAK,CAACC,gBAAN;AACH,GAFQ,CAAT;AAIA,sBACI;AAAA,4BACA,QAAC,IAAD;AAAA,6BACI;AAAA,gCACI;AAAO,UAAA,OAAO,EAAC,MAAf;AAAA,2CAEI;AACI,YAAA,IAAI,EAAC,MADT;AAEI,YAAA,EAAE,EAAC,MAFP;AAGI,YAAA,IAAI,EAAC,OAHT;AAII,YAAA,WAAW,EAAC,iBAJhB;AAKI,YAAA,QAAQ,MALZ,CAMI;;AANJ;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAYI;AAAO,UAAA,OAAO,EAAC,MAAf;AAAA,0CAEI;AACI,YAAA,IAAI,EAAC,MADT;AAEI,YAAA,EAAE,EAAC,MAFP;AAGI,YAAA,IAAI,EAAC,MAHT;AAII,YAAA,WAAW,EAAC,MAJhB;AAKI,YAAA,QAAQ,MALZ,CAMI;AACA;;AAPJ;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZJ,eAwBI;AAAO,UAAA,OAAO,EAAC,OAAf;AAAA,2CAEI;AACI,YAAA,IAAI,EAAC,QADT;AAEI,YAAA,EAAE,EAAC,OAFP;AAGI,YAAA,IAAI,EAAC,OAHT;AAII,YAAA,WAAW,EAAC,OAJhB;AAKI,YAAA,QAAQ,MALZ,CAMI;AACA;;AAPJ;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAxBJ,eAoCI;AAAO,UAAA,OAAO,EAAC,aAAf;AAAA,iDAEI;AACI,YAAA,EAAE,EAAC,aADP;AAEI,YAAA,IAAI,EAAC,aAFT;AAGI,YAAA,WAAW,EAAC,aAHhB;AAII,YAAA,QAAQ,MAJZ,CAKI;AACA;;AANJ;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBApCJ,eA+CI;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA/CJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADA,eAoDA;AAAA,gBACCD,KAAK,CAACE,WAAN,CAAkBC,GAAlB,CAAsB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAChC,4BAAO;AAAA,oBAAID,IAAI,CAACE;AAAT;AAAA;AAAA;AAAA;AAAA,gBAAP;AACP,OAFA;AADD;AAAA;AAAA;AAAA;AAAA,YApDA;AAAA,kBADJ;AA4DH,CAlED;;AAoEA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAAEN,EAAAA,WAAW,EAAEM,KAAK,CAACC,OAAN,CAAcC;AAA7B,CAAL,CAA7B;;AAEA,MAAMC,iBAAiB,GAAG;AAAEV,EAAAA,gBAAgB,EAAEH,OAAO,CAACc;AAA5B,CAA1B;AAGA,eAAehB,OAAO,CAACW,eAAD,EAAkBI,iBAAlB,CAAP,CAA4CZ,aAA5C,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux'\nimport Form from './styles/FormStyles';\nimport * as actions from '../actions/product';\n\nconst CreateProduct = (props) => {\n    \n    useEffect(() => {\n        props.fetchAllProducts()\n    });\n\n    return (\n        <>\n        <Form>\n            <fieldset>\n                <label htmlFor=\"file\">\n                    Image\n                    <input\n                        type=\"file\"\n                        id=\"file\"\n                        name=\"image\"\n                        placeholder=\"Upload an image\"\n                        required\n                        // onChange={handleChange}\n                    />\n                </label>\n                <label htmlFor=\"name\">\n                    Name\n                    <input\n                        type=\"text\"\n                        id=\"name\"\n                        name=\"name\"\n                        placeholder=\"Name\"\n                        required\n                        // value={inputs.name}\n                        // onChange={handleChange}\n                    />\n                </label>\n                <label htmlFor=\"price\">\n                    Price\n                    <input\n                        type=\"number\"\n                        id=\"price\"\n                        name=\"price\"\n                        placeholder=\"Price\"\n                        required\n                        // value={inputs.price}\n                        // onChange={handleChange}\n                    />\n                </label>\n                <label htmlFor=\"description\">\n                    Description\n                    <textarea\n                        id=\"description\"\n                        name=\"description\"\n                        placeholder=\"Description\"\n                        required\n                        // value={inputs.description}\n                        // onChange={handleChange}\n                    />\n                </label>\n                <button type=\"submit\">Submit</button>\n            </fieldset>\n        </Form>\n        <div>\n        {props.productList.map((item, index) => {\n                return <p>{item.title}</p>\n        })}\n        </div>\n        </>\n    )\n}\n\nconst mapStateToProps = state => ({ productList: state.product.list });\n\nconst mapActionsToProps = { fetchAllProducts: actions.fetchAll };\n\n\nexport default connect(mapStateToProps, mapActionsToProps)(CreateProduct);"]},"metadata":{},"sourceType":"module"}